<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.gunther.wildfly</groupId>
	<artifactId>jaxrs-jar</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<failOnMissingWebXml>false</failOnMissingWebXml>

		<plugin.fork.embedded>true</plugin.fork.embedded>

		<docker.password>${DOCKERHUB_TOKEN}</docker.password>

		<version.server.bom>26.0.0.Final</version.server.bom>
		<version.junit>5.8.2</version.junit>
	</properties>

	<profiles>
		<profile>
			<id>jib-image</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<from.image.tag>11</from.image.tag>
				<to.image.tag>jib</to.image.tag>
			</properties>
		</profile>
		<profile>
			<id>jib-debug-image</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<from.image.tag>11-debug</from.image.tag>
				<to.image.tag>jib-debug</to.image.tag>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-jakartaee8-with-tools</artifactId>
				<version>${version.server.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>8.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- TEST DEPENDENCIES -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven
				defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.3.2</version>
				</plugin>
				<plugin>
					<!-- Latest Surefire plugin is required to pick up JUnit5 tests. -->
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>

				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-jar-maven-plugin</artifactId>
					<version>7.0.0.Final</version>
				</plugin>
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>


		<finalName>${project.artifactId}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-jar-maven-plugin</artifactId>
				<configuration>
					<feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#${version.server.bom}</feature-pack-location>
					<layers>
						<layer>jaxrs</layer>
						<layer>management</layer>
						<layer>undertow</layer>
						<layer>logging</layer>
					</layers>
					<excluded-layers>
						<layer>deployment-scanner</layer>
					</excluded-layers>
					<!-- Hollow required to be disabled for jib build -->
					<hollow-jar>false</hollow-jar>
					<cli-sessions>
						<cli-session>
							<script-files>
								<script>scripts/logging.cli</script>
							</script-files>
							<properties-file>scripts/cli.properties</properties-file>
							<resolve-expressions>true</resolve-expressions>
						</cli-session>
					</cli-sessions>
					<extra-server-content-dirs>
						<extra-content>extra-content</extra-content>
					</extra-server-content-dirs>
					<plugin-options>
						<jboss-fork-embedded>${plugin.fork.embedded}</jboss-fork-embedded>
					</plugin-options>
					<!-- required by jib to retrieve the bootable jar -->
					<output-file-name>${project.artifactId}.jar</output-file-name>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<configuration>
					<containerizingMode>packaged</containerizingMode>
					<!-- Default base image is Distroless Openjdk. For debugging
						 purposes an image with shell included might be helpful.
					<from>
						<image>gcr.io/distroless/java:11-debug</image>
					</from>
					-->
					<from>
						<image>gcr.io/distroless/java:${from.image.tag}</image>
					</from>
					<to>
						<!-- to push to external Dockerhub repo -->
						<image>docker.io/guntherrotsch/jaxrs-jar:${to.image.tag}</image>
						<auth>
							<username>guntherrotsch</username>
							<password>${docker.password}</password>
						</auth>
					</to>

					<container>
						<args>
							<!-- required to create a route -->
							<arg>-b=0.0.0.0</arg>
						</args>
						<ports>
							<port>8080</port>
						</ports>
						<mainClass>org.wildfly.core.jar.boot.Main</mainClass>
					</container>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<!-- to push to external repo -->
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>